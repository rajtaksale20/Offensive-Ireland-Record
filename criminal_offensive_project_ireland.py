# -*- coding: utf-8 -*-
"""Criminal_Offensive_Project_Ireland.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1183SlzYB1z09GdanGrDBlATTWZhJlMJ8
"""

# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the data
df = pd.read_csv('/content/CVA09.20240301105215.csv')

# Data Cleaning
# Drop rows with missing values
df.dropna(inplace=True)
# Convert 'VALUE' column to integer
df['VALUE'] = df['VALUE'].astype(int)

# Data Processing
# Filter data for homicide offenses
homicide_data = df[df['ICCS Offence Group'] == 'Homicide offences']

# Data Visualization

# Visualization 1: Total Homicide Offenses by Year
plt.figure(figsize=(10, 6))
sns.barplot(x='Year', y='VALUE', data=homicide_data, estimator=sum, ci=None)
plt.title('Total Homicide Offenses by Year')
plt.xlabel('Year')
plt.ylabel('Total Homicide Offenses')
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.show()

# Visualization 2: Age Distribution of Suspected Offenders
plt.figure(figsize=(10, 6))
sns.histplot(data=homicide_data, x='Age of Suspected Offender at Time of Offence', bins=20, kde=True)
plt.title('Age Distribution of Suspected Offenders in Homicide Offenses')
plt.xlabel('Age of Suspected Offender')
plt.ylabel('Frequency')
plt.grid(axis='y')
plt.show()

# Print the first few rows of the dataset
print(homicide_data.head())

# Check the column names
print(homicide_data.columns)

# Visualization: Homicide Offenses by ICCS Offence Group
plt.figure(figsize=(10, 6))
sns.countplot(data=homicide_data, x='ICCS Offence Group', order=homicide_data['ICCS Offence Group'].value_counts().index, palette='viridis')
plt.title('Homicide Offenses by ICCS Offence Group')
plt.xlabel('ICCS Offence Group')
plt.ylabel('Number of Homicide Offenses')
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.show()

# Seasonal Variation in Homicide Offenses
# Extract month from the 'Date' column
homicide_data['Year'] = pd.to_datetime(homicide_data['Year'])
homicide_data['Month'] = homicide_data['Year'].dt.month

# Visualization 4: Homicide Offenses by Month
plt.figure(figsize=(10, 6))
sns.countplot(data=homicide_data, x='Month', palette='coolwarm')
plt.title('Homicide Offenses by Month')
plt.xlabel('Month')
plt.ylabel('Number of Homicide Offenses')
plt.xticks(ticks=range(1, 13), labels=['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])
plt.grid(axis='y')
plt.show()

# Visualization: Age and Gender Distribution of Suspected Offenders
plt.figure(figsize=(10, 6))
sns.histplot(data=homicide_data, x='Age of Suspected Offender at Time of Offence', hue='C02076V02508', bins=20, kde=True)
plt.title('Age and Gender Distribution of Suspected Offenders in Homicide Offenses')
plt.xlabel('Age of Suspected Offender')
plt.ylabel('Frequency')
plt.grid(axis='y')
plt.legend(title='Sex', loc='upper right')
plt.show()

# Time Series Analysis (Optional)
# This could involve more advanced techniques like ARIMA or Prophet for forecasting, but let's keep it simple for now.
# We can visualize the trend in homicide offenses over the years.
plt.figure(figsize=(10, 6))
sns.lineplot(data=homicide_data, x='Year', y='VALUE', estimator=sum, ci=None)
plt.title('Trend in Homicide Offenses Over the Years')
plt.xlabel('Year')
plt.ylabel('Total Homicide Offenses')
plt.xticks(rotation=45)
plt.grid(axis='y')
plt.show()